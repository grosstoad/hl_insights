{"ast":null,"code":"var _jsxFileName = \"/Users/sarah/Documents/Programming Projects/home-loan-visualiser/home-loan-visualizer/src/components/LoanChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoanChart = ({\n  extraPayment\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [scheduleData, setScheduleData] = useState([]);\n  const [error, setError] = useState(null);\n  const monthsToYears = months => (months / 12).toFixed(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post('http://127.0.0.1:5000/schedule', {\n          balance: 300000,\n          // example values\n          interest_rate: 3.5,\n          monthly_payment: 1500,\n          term: 360\n        });\n        setScheduleData(result.data);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch data from server');\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchUpdatedData = async () => {\n      try {\n        const result = await axios.post('http://127.0.0.1:5000/savings', {\n          balance: 300000,\n          // example values\n          interest_rate: 3.5,\n          monthly_payment: 1500,\n          extra_payment: parseFloat(extraPayment),\n          term: 360\n        });\n        const updatedData = result.data.schedule.map((item, index) => ({\n          ...item,\n          month: index + 1\n        }));\n        setData(updatedData);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch data from server');\n      }\n    };\n    if (extraPayment > 0) {\n      fetchUpdatedData();\n    } else {\n      setData([]);\n    }\n  }, [extraPayment]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n  const formatTooltip = value => `$${value.toFixed(2)}`;\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 800,\n    height: 400,\n    data: scheduleData,\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"month\",\n      tickFormatter: monthsToYears,\n      label: {\n        value: 'Years',\n        position: 'insideBottomRight',\n        offset: -5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      formatter: formatTooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"balance\",\n      name: \"Scheduled Balance\",\n      stroke: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"balance\",\n      name: \"Scenario Balance\",\n      stroke: \"#82ca9d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(LoanChart, \"16TF9ilRcv3ztggr1T/WHC9THtI=\");\n_c = LoanChart;\nexport default LoanChart;\nvar _c;\n$RefreshReg$(_c, \"LoanChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","axios","jsxDEV","_jsxDEV","LoanChart","extraPayment","_s","data","setData","scheduleData","setScheduleData","error","setError","monthsToYears","months","toFixed","fetchData","result","post","balance","interest_rate","monthly_payment","term","err","console","fetchUpdatedData","extra_payment","parseFloat","updatedData","schedule","map","item","index","month","children","fileName","_jsxFileName","lineNumber","columnNumber","formatTooltip","value","width","height","strokeDasharray","dataKey","tickFormatter","label","position","offset","formatter","type","name","stroke","length","_c","$RefreshReg$"],"sources":["/Users/sarah/Documents/Programming Projects/home-loan-visualiser/home-loan-visualizer/src/components/LoanChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport axios from 'axios';\n\nconst LoanChart = ({ extraPayment }) => {\n    const [data, setData] = useState([]);\n    const [scheduleData, setScheduleData] = useState([]);\n    const [error, setError] = useState(null);\n\n    const monthsToYears = (months) => (months / 12).toFixed(1);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const result = await axios.post('http://127.0.0.1:5000/schedule', {\n                    balance: 300000,  // example values\n                    interest_rate: 3.5,\n                    monthly_payment: 1500,\n                    term: 360\n                });\n                setScheduleData(result.data);\n            } catch (err) {\n                console.error(err);\n                setError('Failed to fetch data from server');\n            }\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const fetchUpdatedData = async () => {\n            try {\n                const result = await axios.post('http://127.0.0.1:5000/savings', {\n                    balance: 300000,  // example values\n                    interest_rate: 3.5,\n                    monthly_payment: 1500,\n                    extra_payment: parseFloat(extraPayment),\n                    term: 360\n                });\n                const updatedData = result.data.schedule.map((item, index) => ({\n                    ...item,\n                    month: index + 1\n                }));\n                setData(updatedData);\n            } catch (err) {\n                console.error(err);\n                setError('Failed to fetch data from server');\n            }\n        };\n\n        if (extraPayment > 0) {\n            fetchUpdatedData();\n        } else {\n            setData([]);\n        }\n    }, [extraPayment]);\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    const formatTooltip = (value) => `$${value.toFixed(2)}`;\n\n    return (\n        <LineChart width={800} height={400} data={scheduleData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"month\" tickFormatter={monthsToYears} label={{ value: 'Years', position: 'insideBottomRight', offset: -5 }} />\n            <YAxis />\n            <Tooltip formatter={formatTooltip} />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"balance\" name=\"Scheduled Balance\" stroke=\"#8884d8\" />\n            {data.length > 0 && (\n                <Line type=\"monotone\" dataKey=\"balance\" name=\"Scenario Balance\" stroke=\"#82ca9d\" />\n            )}\n        </LineChart>\n    );\n};\n\nexport default LoanChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}